{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\MAMP\\\\htdocs\\\\LeJeudePiste\\\\src\\\\js\\\\Components\\\\Header.js\";\nimport React from 'react';\nimport \"../../css/Components/header.css\";\nimport Menu from './Menu';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMenu = e => {\n      let menu = document.getElementById(\"menu\");\n      let titleBlock = document.getElementById(\"titleMenuBlock\");\n      let title = document.getElementById(\"titleMenuTxt\");\n      let item = document.getElementById(\"itemsBlock\");\n      let contactBlock = document.getElementById(\"contactBlock\");\n      let contact = document.getElementById(\"contactTxt\");\n      let leave = document.getElementById(\"leaveBlock\");\n\n      if (e.target.id !== \"hamb\") {\n        e.target = e.target.parentNode;\n      }\n\n      if (this.state.onCross) {\n        e.target.childNodes[0].className = \"animationHambUpInv\";\n        e.target.childNodes[1].className = \"animationHambMidInv\";\n        e.target.childNodes[2].className = \"animationHambDownInv\";\n        this.setState({\n          onCross: false\n        }, () => {\n          menu.className = \"animMenuInv\";\n          title.className = \"animTitleInv\";\n\n          for (let i = 0; i < item.childElementCount; i++) {\n            item.childNodes[i].id = \"animItemInv\" + i.toString();\n          }\n\n          contact.className = \"animContactInv\";\n          leave.className = \"animLeaveInv\";\n        });\n      } else {\n        e.target.childNodes[0].className = \"animationHambUp\";\n        e.target.childNodes[1].className = \"animationHambMid\";\n        e.target.childNodes[2].className = \"animationHambDown\";\n        this.setState({\n          onCross: true\n        }, () => {\n          menu.className = \"animMenu\";\n          titleBlock.className = \"animTitleBlock\";\n          title.className = \"animTitle\";\n          itemsBlock.className = \"animItemsBlock\";\n\n          for (let i = 0; i < item.childElementCount; i++) {\n            item.childNodes[i].id = \"animItem\" + i.toString();\n          }\n\n          contactBlock.className = \"animContactBlocks\";\n          contact.className = \"animContact\";\n          leave.className = \"animLeave\";\n        });\n      }\n    };\n\n    this.state = {\n      onCross: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"headerBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"logoBlock\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"logo\",\n            src: \"img\\\\Logo.png\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"titleBlock\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"titleTxt\",\n            children: \"Le Jeu de Piste\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hambBlock\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"hamb\",\n            onClick: this.handleMenu,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"hambUp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"hambMid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"hambDown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["C:/MAMP/htdocs/LeJeudePiste/src/js/Components/Header.js"],"names":["React","Menu","Header","Component","constructor","props","handleMenu","e","menu","document","getElementById","titleBlock","title","item","contactBlock","contact","leave","target","id","parentNode","state","onCross","childNodes","className","setState","i","childElementCount","toString","itemsBlock","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"../../css/Components/header.css\"\r\nimport Menu from './Menu';\r\n\r\n class Header extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props)\r\n      this.state={\r\n        onCross:false\r\n      }\r\n    }\r\n\r\n    handleMenu = (e) => {\r\n\r\n      let menu = document.getElementById(\"menu\")\r\n      let titleBlock = document.getElementById(\"titleMenuBlock\")\r\n      let title = document.getElementById(\"titleMenuTxt\")\r\n      let item = document.getElementById(\"itemsBlock\")\r\n      let contactBlock = document.getElementById(\"contactBlock\")\r\n      let contact = document.getElementById(\"contactTxt\")\r\n      let leave = document.getElementById(\"leaveBlock\")\r\n\r\n      if (e.target.id !== \"hamb\"){\r\n        e.target = e.target.parentNode;\r\n      }\r\n\r\n      if (this.state.onCross) {\r\n        e.target.childNodes[0].className = \"animationHambUpInv\"\r\n        e.target.childNodes[1].className = \"animationHambMidInv\"\r\n        e.target.childNodes[2].className = \"animationHambDownInv\"\r\n        this.setState({onCross:false},()=>{\r\n          menu.className = \"animMenuInv\"\r\n          title.className = \"animTitleInv\"\r\n          for (let i = 0;i<item.childElementCount;i++){\r\n            item.childNodes[i].id = \"animItemInv\"+i.toString()\r\n          }\r\n          contact.className = \"animContactInv\"\r\n          leave.className = \"animLeaveInv\"\r\n        })\r\n      } else {\r\n        e.target.childNodes[0].className = \"animationHambUp\"\r\n        e.target.childNodes[1].className = \"animationHambMid\"\r\n        e.target.childNodes[2].className = \"animationHambDown\"\r\n        this.setState({onCross:true},()=>{\r\n          menu.className = \"animMenu\"\r\n          titleBlock.className = \"animTitleBlock\"\r\n          title.className = \"animTitle\"\r\n          itemsBlock.className = \"animItemsBlock\"\r\n          for (let i = 0;i<item.childElementCount;i++){\r\n            item.childNodes[i].id = \"animItem\"+i.toString()\r\n          }\r\n          contactBlock.className = \"animContactBlocks\"\r\n          contact.className = \"animContact\"\r\n          leave.className = \"animLeave\"\r\n        })\r\n      }\r\n      \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n      return (\r\n            <div id=\"header\">\r\n             <Menu/>\r\n                <div id=\"headerBlock\">\r\n                    <div id=\"logoBlock\">\r\n                      <img id=\"logo\" src='img\\Logo.png' alt=\"logo\"/>\r\n                    </div>\r\n                    <div id=\"titleBlock\">\r\n                      <p id=\"titleTxt\">Le Jeu de Piste</p>\r\n                    </div>\r\n                    <div id=\"hambBlock\">\r\n                      <div id=\"hamb\" onClick={this.handleMenu}>\r\n                        <div id=\"hambUp\"></div>\r\n                        <div id=\"hambMid\"></div>\r\n                        <div id=\"hambDown\"></div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default Header"]},"metadata":{},"sourceType":"module"}